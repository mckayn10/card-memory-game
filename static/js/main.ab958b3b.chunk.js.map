{"version":3,"sources":["components/GameCard/GameCard.js","views/GameOver/GaveOverView.js","components/ClickCounter/ClickCounter.js","assets/chubbs2.jpg","assets/piece.jpg","assets/donkey.jpg","assets/skin.jpg","assets/skeets.jpg","assets/ryan.jpg","assets/nikki.jpg","assets/mac.jpg","assets/rj.jpg","assets/stella.jpg","assets/tatum.jpg","assets/jonas.jpg","assets/packs.jpg","assets/pais.jpg","Data/cardData.js","views/PlayGame/PlayGame.js","App.js","reportWebVitals.js","index.js"],"names":["GameCard","backgroundImg","this","props","image","className","flipped","matched","onClick","clicked","style","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","Component","GameOverView","clicks","restart","ClickCounter","gameOver","minClicks","number","Math","floor","random","cards","chubbs","piece","skin","skeets","ry","donkey","nikki","mac","rich","stella","tatum","jonas","pais","packs","PlayGame","state","currentCardList","flippedCards","highScore","shuffleArr","arr","sort","map","card","index","id","handleClick","currentCard","length","updateCards","updateFlipped","push","setState","addToFlippedCards","setTimeout","check","isGameOver","gameIsOver","gameCardsList","i","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab958b3b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './gameCard.css';\r\n\r\nclass GameCard extends Component {\r\n    \r\n    \r\n    render() {\r\n        let backgroundImg = this.props.image\r\n\r\n        return (\r\n            <div \r\n                className={`${this.props.flipped ? 'flipped-card' : 'flip-card' } ${this.props.matched ? 'matched' : ''}`}\r\n                onClick={this.props.clicked}\r\n            >\r\n                <div className=\"flip-card-inner\">\r\n                    <div className=\"flip-card-front common-styles\">\r\n                        <h1 className=\"card-text\">?</h1>\r\n                    </div>\r\n                    <div className=\"flip-card-back common-styles\" \r\n                        style={{\r\n                            backgroundImage: `url(${backgroundImg})`,\r\n                            backgroundPosition: 'center',\r\n                            backgroundRepeat: 'no-repeat',\r\n                            backgroundSize: 'cover',\r\n\r\n                        }}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameCard","import React, { Component } from 'react';\r\nimport './gameOver.css';\r\n\r\nclass GameOverView extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"game-over-container\">\r\n                <h1 className=\"game-over-text-lg\">GAME OVER</h1>\r\n                <h3 className=\"game-over-text\">You finished the game in {this.props.clicks} clicks!</h3>\r\n                <h3 className=\"game-over-text\">Can you do better?</h3>\r\n                <button onClick={this.props.restart} className=\"play-again-btn\">Play Again</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameOverView","import React, { Component } from 'react';\r\nimport './clickCounter.css';\r\n\r\nclass ClickCounter extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"click-counter-container\">\r\n                {!this.props.gameOver ? \r\n                <div>\r\n                    <h1 className=\"counter-text\">Clicks: {this.props.clicks}</h1> \r\n                    <div className=\"min-text\">(minumum of {this.props.minClicks})</div>\r\n                </div>\r\n                \r\n                : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClickCounter","export default __webpack_public_path__ + \"static/media/chubbs2.59344bb2.jpg\";","export default __webpack_public_path__ + \"static/media/piece.f83fe70e.jpg\";","export default __webpack_public_path__ + \"static/media/donkey.ed4b85f2.jpg\";","export default __webpack_public_path__ + \"static/media/skin.53f85439.jpg\";","export default __webpack_public_path__ + \"static/media/skeets.8fd796f8.jpg\";","export default __webpack_public_path__ + \"static/media/ryan.a6a278c5.jpg\";","export default __webpack_public_path__ + \"static/media/nikki.33241d97.jpg\";","export default __webpack_public_path__ + \"static/media/mac.b6a7d7a8.jpg\";","export default __webpack_public_path__ + \"static/media/rj.5d00f11f.jpg\";","export default __webpack_public_path__ + \"static/media/stella.833b47a6.jpg\";","export default __webpack_public_path__ + \"static/media/tatum.a14d048c.jpg\";","export default __webpack_public_path__ + \"static/media/jonas.f6d5a979.jpg\";","export default __webpack_public_path__ + \"static/media/packs.e98eafd9.jpg\";","export default __webpack_public_path__ + \"static/media/pais.cb7987e6.jpg\";","import chubbs from '../assets/chubbs2.jpg'\r\nimport piece from '../assets/piece.jpg'\r\nimport donkey from '../assets/donkey.jpg'\r\nimport skin from '../assets/skin.jpg'\r\nimport skeets from '../assets/skeets.jpg'\r\nimport ry from '../assets/ryan.jpg'\r\nimport nikki from '../assets/nikki.jpg'\r\nimport mac from '../assets/mac.jpg'\r\nimport rich from '../assets/rj.jpg'\r\nimport stella from '../assets/stella.jpg'\r\nimport tatum from '../assets/tatum.jpg'\r\nimport jonas from '../assets/jonas.jpg'\r\nimport packs from '../assets/packs.jpg'\r\nimport pais from '../assets/pais.jpg'\r\n\r\nconst number = Math.floor(Math.random() * 100);\r\n\r\n\r\nconst cards = [\r\n    {\r\n        number: 1,\r\n        image: chubbs\r\n    },\r\n    {\r\n        number: 1,\r\n        image: chubbs\r\n    },\r\n    {\r\n        number: 2,\r\n        image: piece\r\n    },\r\n    {\r\n        number: 2,\r\n        image: piece\r\n    },\r\n    {\r\n        number: 3,\r\n        image: skin\r\n    },\r\n    {\r\n        number: 3,\r\n        image: skin\r\n    },\r\n    {\r\n        number: 4,\r\n        image: skeets\r\n    },\r\n    {\r\n        number: 4,\r\n        image: skeets\r\n    },\r\n    {\r\n        number: 5,\r\n        image: ry\r\n    },\r\n    {\r\n        number: 5,\r\n        image: ry\r\n    },\r\n    {\r\n        number: 6,\r\n        image: donkey\r\n    },\r\n    {\r\n        number: 6,\r\n        image: donkey\r\n    },\r\n    {\r\n        number: 7,\r\n        image: nikki\r\n    },\r\n    {\r\n        number: 7,\r\n        image: nikki\r\n    },\r\n    {\r\n        number: 8,\r\n        image: mac\r\n    },\r\n    {\r\n        number: 8,\r\n        image: mac\r\n    },\r\n    {\r\n        number: 9,\r\n        image: rich\r\n    },\r\n    {\r\n        number: 9,\r\n        image: rich\r\n    },\r\n    {\r\n        number: 10,\r\n        image: number % 2 === 0 ? stella : tatum\r\n    },\r\n    {\r\n        number: 10,\r\n        image: number % 2 === 0 ? stella : tatum\r\n    },\r\n    {\r\n        number: 11,\r\n        image: jonas\r\n    },\r\n    {\r\n        number: 11,\r\n        image: jonas\r\n    },\r\n    {\r\n        number: 12,\r\n        image: number % 2 === 0 ? pais : packs\r\n    },\r\n    {\r\n        number: 12,\r\n        image: number % 2 === 0 ? pais : packs\r\n    },\r\n]\r\n\r\n\r\nexport default cards\r\n","import React, { Component } from 'react';\r\nimport GameCard from '../../components/GameCard/GameCard'\r\nimport GameOverView from '../GameOver/GaveOverView'\r\nimport ClickCounter from '../../components/ClickCounter/ClickCounter'\r\nimport cards from '../../Data/cardData'\r\nimport './playGame.css'\r\n\r\nclass PlayGame extends Component {\r\n    state = {\r\n        currentCardList: [],\r\n        flippedCards: [],\r\n        gameOver: false,\r\n        clicks: 0,\r\n        highScore: 'NA'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            currentCardList: this.shuffleArr(cards)\r\n        })\r\n    }\r\n\r\n    shuffleArr = (arr) => {\r\n        const cardsList = arr.sort(() => Math.random() - 0.5);\r\n\r\n        let newCards = cardsList.map((card, index) => {\r\n            return {\r\n                id: index,\r\n                number: card.number,\r\n                flipped: false,\r\n                matched: false,\r\n                image: card.image\r\n            };\r\n        })\r\n        return newCards\r\n    }\r\n\r\n    handleClick = (number, index) => {\r\n        const { currentCardList, flippedCards, clicks } = this.state\r\n\r\n        let currentCard = {\r\n            number,\r\n            index\r\n        };\r\n\r\n        if(flippedCards.length > 0){\r\n            if(currentCard.index === flippedCards[0].index){\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        //update card is flipped\r\n        let updateCards = currentCardList.map(card => {\r\n            if (card.id === index) {\r\n                card.flipped = true;\r\n            }\r\n            return card;\r\n        });\r\n\r\n        let updateFlipped = flippedCards;\r\n        updateFlipped.push(currentCard);\r\n\r\n        this.setState({\r\n            currentCardList: updateCards,\r\n            clicks: clicks + 1\r\n        })\r\n\r\n        this.addToFlippedCards(updateFlipped)\r\n\r\n    }\r\n\r\n    addToFlippedCards = (updateFlipped) => {\r\n        const { flippedCards } = this.state\r\n\r\n        this.setState({\r\n            flippedCards: updateFlipped\r\n        }, () => {\r\n\r\n            //if 2 cards are flipped, check if they are a match\r\n            if (flippedCards.length === 2) {\r\n                setTimeout(() => {\r\n                    this.check();\r\n                }, 1000);\r\n            }\r\n        })\r\n    }\r\n\r\n    check = () => {\r\n        const { currentCardList, flippedCards } = this.state\r\n        let updateCards = currentCardList;\r\n\r\n        if (\r\n            flippedCards[0].number === flippedCards[1].number &&\r\n            flippedCards[0].index !== flippedCards[1].index\r\n        ) {\r\n            updateCards[flippedCards[0].index].matched = true;\r\n            updateCards[flippedCards[1].index].matched = true;\r\n            this.isGameOver()\r\n        } else {\r\n            updateCards[flippedCards[0].index].flipped = false;\r\n            updateCards[flippedCards[1].index].flipped = false;\r\n        }\r\n\r\n        this.setState({\r\n            currentCardList: updateCards,\r\n            flippedCards: []\r\n        })\r\n\r\n    }\r\n\r\n    isGameOver = () => {\r\n        let gameIsOver = true;\r\n        this.state.currentCardList.map(card => {\r\n            if (!card.matched) {\r\n                gameIsOver = false\r\n            }\r\n            return null;\r\n        })\r\n\r\n        this.setState({\r\n            gameOver: gameIsOver,\r\n        })\r\n\r\n        if(gameIsOver){\r\n            this.setState({\r\n                highScore: this.state.clicks\r\n            })\r\n        }\r\n    }\r\n\r\n    restart = () => {\r\n        this.setState({\r\n            currentCardList: this.shuffleArr(cards),\r\n            flippedCards: [],\r\n            gameOver: false,\r\n            clicks: 0\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const gameCardsList = this.state.currentCardList.map((card, i) => {\r\n            return (\r\n                <GameCard\r\n                    key={i}\r\n                    index={i}\r\n                    number={card.number}\r\n                    matched={card.matched}\r\n                    flipped={card.flipped}\r\n                    clicked={this.state.flippedCards.length === 2 ? () => { } : () => this.handleClick(card.number, i)}\r\n                    image={card.image}\r\n                />\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"header\">\r\n                    <div className=\"top-header-row\">\r\n                        <h1 className='title'>Card Matching Game</h1>\r\n                        <h1 className=\"score-title title\">High Score: {this.state.highScore}</h1>\r\n                    </div>\r\n                    <ClickCounter \r\n                        clicks={this.state.clicks} \r\n                        gameOver={this.state.gameOver}\r\n                        minClicks={cards.length}\r\n                    />\r\n                </div>\r\n                {!this.state.gameOver \r\n                    ? <div className=\"game-container\">\r\n                        {gameCardsList}\r\n                      </div>\r\n                    : <GameOverView \r\n                        restart={() => this.restart()} \r\n                        clicks={this.state.clicks}\r\n                      />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayGame","import PlayGame from './views/PlayGame/PlayGame'\n\nfunction App() {\n  return (\n    <PlayGame />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}